"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkibmdotcom_web_components_test"] = self["webpackChunkibmdotcom_web_components_test"] || []).push([["vendors-node_modules_carbon_ibmdotcom-web-components_es_components_video-player_index_js"],{

/***/ "./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/defs.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/defs.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VIDEO_PLAYER_CONTENT_STATE: () => (/* binding */ VIDEO_PLAYER_CONTENT_STATE),\n/* harmony export */   VIDEO_PLAYER_PLAYING_MODE: () => (/* binding */ VIDEO_PLAYER_PLAYING_MODE)\n/* harmony export */ });\n/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Video player's content state.\n */\nlet VIDEO_PLAYER_CONTENT_STATE;\n\n/**\n * Video player's playing mode.\n */\n(function (VIDEO_PLAYER_CONTENT_STATE) {\n  VIDEO_PLAYER_CONTENT_STATE[\"THUMBNAIL\"] = \"thumbnail\";\n  VIDEO_PLAYER_CONTENT_STATE[\"VIDEO\"] = \"video\";\n})(VIDEO_PLAYER_CONTENT_STATE || (VIDEO_PLAYER_CONTENT_STATE = {}));\nlet VIDEO_PLAYER_PLAYING_MODE;\n(function (VIDEO_PLAYER_PLAYING_MODE) {\n  VIDEO_PLAYER_PLAYING_MODE[\"INLINE\"] = \"inline\";\n  VIDEO_PLAYER_PLAYING_MODE[\"LIGHTBOX\"] = \"lightbox\";\n})(VIDEO_PLAYER_PLAYING_MODE || (VIDEO_PLAYER_PLAYING_MODE = {}));\n//# sourceMappingURL=defs.js.map\n\n\n//# sourceURL=webpack://ibmdotcom-web-components-test/./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/defs.js?");

/***/ }),

/***/ "./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _video_player_container_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./video-player-container.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player-container.js\");\n/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */ /**\n     * @license\n     *\n     * Copyright IBM Corp. 2020, 2021\n     *\n     * This source code is licensed under the Apache-2.0 license found in the\n     * LICENSE file in the root directory of this source tree.\n     */\n\n\n//# sourceMappingURL=index.js.map\n\n\n//# sourceURL=webpack://ibmdotcom-web-components-test/./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/index.js?");

/***/ }),

/***/ "./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player-composite.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player-composite.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_decorate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/decorate */ \"./node_modules/@babel/runtime/helpers/esm/decorate.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/get */ \"./node_modules/@babel/runtime/helpers/esm/get.js\");\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_decorators_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lit/decorators.js */ \"./node_modules/lit/decorators.js\");\n/* harmony import */ var lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lit/directives/if-defined.js */ \"./node_modules/lit/directives/if-defined.js\");\n/* harmony import */ var _internal_vendor_carbon_web_components_globals_decorators_host_listener_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../internal/vendor/@carbon/web-components/globals/decorators/host-listener.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/web-components/globals/decorators/host-listener.js\");\n/* harmony import */ var _internal_vendor_carbon_web_components_globals_mixins_host_listener_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../internal/vendor/@carbon/web-components/globals/mixins/host-listener.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/web-components/globals/mixins/host-listener.js\");\n/* harmony import */ var _internal_vendor_carbon_ibmdotcom_utilities_utilities_settings_settings_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js\");\n/* harmony import */ var _internal_vendor_carbon_ibmdotcom_services_services_KalturaPlayer_KalturaPlayer_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../internal/vendor/@carbon/ibmdotcom-services/services/KalturaPlayer/KalturaPlayer.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/ibmdotcom-services/services/KalturaPlayer/KalturaPlayer.js\");\n/* harmony import */ var _globals_mixins_hybrid_render_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../globals/mixins/hybrid-render.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/globals/mixins/hybrid-render.js\");\n/* harmony import */ var _video_player_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./video-player.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player.js\");\n/* harmony import */ var _internal_vendor_carbon_web_components_globals_decorators_carbon_element_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js\");\n\n\n\nlet _ = t => t,\n  _t,\n  _t2;\nfunction _superPropGet(t, e, r, o) { var p = (0,_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((0,_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(1 & o ? t.prototype : t), e, r); return 2 & o ? function (t) { return p.apply(r, t); } : p; }\n/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\n\n\n\n\n\n// Above import is interface-only ref and thus code won't be brought into the build\n// Above import is interface-only ref and thus code won't be brought into the build\n// Above import is interface-only ref and thus code won't be brought into the build\n\n\nconst {\n  stablePrefix: c4dPrefix\n} = _internal_vendor_carbon_ibmdotcom_utilities_utilities_settings_settings_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"];\n\n/**\n * Component that renders video player from its metadata, etc.\n *\n * @element c4d-video-player-composite\n * @csspart video-player - The video player. Usage `c4d-video-player-composite::part(video-player)`\n */\nlet C4DVideoPlayerComposite = (0,_babel_runtime_helpers_esm_decorate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([(0,_internal_vendor_carbon_web_components_globals_decorators_carbon_element_js__WEBPACK_IMPORTED_MODULE_12__.carbonElement)(`${c4dPrefix}-video-player-composite`)], function (_initialize, _HybridRenderMixin) {\n  class C4DVideoPlayerComposite extends _HybridRenderMixin {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: C4DVideoPlayerComposite,\n    d: [{\n      kind: \"method\",\n      key: \"_activateEmbeddedVideo\",\n      value:\n      /**\n       * The placeholder for `_loadVideoData()` Redux action that may be mixed in.\n       *\n       * @internal\n       */\n\n      /**\n       * The placeholder for `_loadVideoData()` Redux action that may be mixed in.\n       *\n       * @internal\n       */\n\n      /**\n       * The placeholder for `_setAutoplayPreference()` Redux action that may be mixed in.\n       */\n      // @ts-ignore\n\n      /**\n       * The placeholder for `_getAutoplayPreference()` Redux action that may be mixed in.\n       */\n      // @ts-ignore\n\n      /**\n       * Activate the DOM nodes for the embedded video of the given video ID, and deactivates others.\n       *\n       * @param videoId The video ID to activate.\n       */\n      function _activateEmbeddedVideo(videoId) {\n        const {\n          embeddedVideos = {}\n        } = this;\n        Object.keys(embeddedVideos).forEach(key => {\n          embeddedVideos[key].sendNotification(key === videoId ? 'doPlay' : 'doStop');\n        });\n      }\n\n      /**\n       * The video player.\n       */\n    }, {\n      kind: \"get\",\n      key: \"_videoPlayer\",\n      value: function () {\n        const {\n          selectorVideoPlayer\n        } = this.constructor;\n        return this.querySelector(selectorVideoPlayer);\n      }\n\n      /**\n       * Handles `c4d-video-player-content-state-changed` event.\n       * Such event is fired when user changes video content state, e.g. from thumbnail to video player.\n       *\n       * @param event The event.\n       */\n    }, {\n      kind: \"method\",\n      decorators: [(0,_internal_vendor_carbon_web_components_globals_decorators_host_listener_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])('eventContentStateChange')],\n      key: \"_handleContentStateChange\",\n      value: function _handleContentStateChange(event) {\n        const {\n          contentState,\n          playingMode,\n          videoId\n        } = event.detail;\n        if (contentState === _video_player_js__WEBPACK_IMPORTED_MODULE_11__.VIDEO_PLAYER_CONTENT_STATE.VIDEO && playingMode === _video_player_js__WEBPACK_IMPORTED_MODULE_11__.VIDEO_PLAYER_PLAYING_MODE.INLINE && videoId) {\n          var _this$_embedMedia;\n          (_this$_embedMedia = this._embedMedia) === null || _this$_embedMedia === void 0 || _this$_embedMedia.call(this, videoId, this.backgroundMode);\n        }\n      }\n    }, {\n      kind: \"method\",\n      decorators: [(0,_internal_vendor_carbon_web_components_globals_decorators_host_listener_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])('eventPlaybackStateChange')],\n      key: \"_handlePlaybackStateChange\",\n      value: function _handlePlaybackStateChange(event) {\n        const {\n          videoId\n        } = event.detail;\n        const {\n          embeddedVideos = {}\n        } = this;\n        if (this.isPlaying) {\n          embeddedVideos[videoId].sendNotification('doPause');\n          this.isPlaying = false;\n        } else {\n          embeddedVideos[videoId].sendNotification('doPlay');\n          this.isPlaying = true;\n        }\n        this._setAutoplayPreference(this.isPlaying);\n      }\n    }, {\n      kind: \"method\",\n      key: \"pauseAllVideos\",\n      value: function pauseAllVideos() {\n        const {\n          embeddedVideos = {}\n        } = this;\n        Object.keys(embeddedVideos).forEach(videoId => {\n          embeddedVideos[videoId].sendNotification('doPause');\n        });\n        this.isPlaying = false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"playAllVideos\",\n      value: function playAllVideos() {\n        const {\n          embeddedVideos = {}\n        } = this;\n        Object.keys(embeddedVideos).forEach(videoId => {\n          embeddedVideos[videoId].sendNotification('doPlay');\n        });\n        this.isPlaying = true;\n      }\n\n      /**\n       * `true` to autoplay the videos.\n       */\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_4__.property)({\n        type: Boolean,\n        attribute: 'auto-play'\n      })],\n      key: \"autoPlay\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_4__.property)({\n        attribute: false\n      })],\n      key: \"embeddedVideos\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_4__.property)({\n        reflect: true,\n        attribute: 'caption'\n      })],\n      key: \"caption\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_4__.property)({\n        reflect: true,\n        attribute: 'video-description'\n      })],\n      key: \"customVideoDescription\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_4__.property)({\n        attribute: false\n      })],\n      key: \"formatCaption\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_4__.property)({\n        attribute: false\n      })],\n      key: \"formatDuration\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_4__.property)({\n        type: Boolean,\n        attribute: 'hide-caption'\n      })],\n      key: \"hideCaption\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_4__.property)({\n        type: Boolean,\n        attribute: 'background-mode'\n      })],\n      key: \"backgroundMode\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_4__.property)({\n        attribute: false\n      })],\n      key: \"mediaData\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_4__.property)({\n        attribute: 'video-id'\n      })],\n      key: \"videoId\",\n      value() {\n        return '';\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_4__.property)({\n        attribute: 'aspect-ratio'\n      })],\n      key: \"aspectRatio\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_4__.property)()],\n      key: \"isPlaying\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_4__.property)({\n        reflect: true,\n        attribute: 'playing-mode'\n      })],\n      key: \"playingMode\",\n      value() {\n        return _video_player_js__WEBPACK_IMPORTED_MODULE_11__.VIDEO_PLAYER_PLAYING_MODE.INLINE;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_4__.property)({\n        reflect: true,\n        attribute: 'thumbnail'\n      })],\n      key: \"thumbnail\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_4__.property)({\n        type: Number,\n        attribute: 'video-thumbnail-width'\n      })],\n      key: \"videoThumbnailWidth\",\n      value() {\n        return 3;\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value:\n      /**\n       * The embedded Kaltura player element (that has `.sendNotification()`, etc. APIs), keyed by the video ID.\n       */\n      /**\n       * Optional custom video caption.\n       */\n      /**\n       * Custom video description. This property should only be set when `playing-mode=\"lightbox\"`.\n       */\n      /**\n       * The formatter for the video caption, composed with the video name and the video duration.\n       * Should be changed upon the locale the UI is rendered with.\n       */\n      /**\n       * The formatter for the video duration.\n       * Should be changed upon the locale the UI is rendered with.\n       */\n      /**\n       * `true` to hide the caption.\n       */\n      /**\n       * `true` to autoplay, mute, and hide player UI.\n       */\n      /**\n       * The video data, keyed by the video ID.\n       */\n      /**\n       * The video ID.\n       */\n      /**\n       * The aspect ratio.\n       */\n      /**\n       * The current playback state\n       */\n      /**\n       * The video player's mode showing Inline or Lightbox.\n       */\n      /**\n       * Optional custom video thumbnail\n       */\n      /**\n       * The video thumbnail width.\n       */\n      function connectedCallback() {\n        _superPropGet(C4DVideoPlayerComposite, \"connectedCallback\", this, 3)([]);\n        if (this.backgroundMode) {\n          this.hideCaption = true;\n        }\n        if (this.autoPlay || this.backgroundMode) {\n          const storedPreference = this._getAutoplayPreference();\n          if (storedPreference === null) {\n            this.isPlaying = !window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n          } else {\n            this.isPlaying = storedPreference;\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProperties) {\n        if (changedProperties.has('videoId')) {\n          const {\n            autoPlay,\n            videoId,\n            backgroundMode\n          } = this;\n          this._activateEmbeddedVideo(videoId);\n          if (videoId) {\n            var _this$_loadVideoData;\n            (_this$_loadVideoData = this._loadVideoData) === null || _this$_loadVideoData === void 0 || _this$_loadVideoData.call(this, videoId);\n            if (autoPlay || backgroundMode) {\n              var _this$_embedMedia2;\n              (_this$_embedMedia2 = this._embedMedia) === null || _this$_embedMedia2 === void 0 || _this$_embedMedia2.call(this, videoId, backgroundMode);\n            }\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"renderLightDOM\",\n      value: function renderLightDOM() {\n        const {\n          aspectRatio,\n          formatCaption,\n          formatDuration,\n          hideCaption,\n          caption,\n          customVideoDescription,\n          mediaData = {},\n          videoId,\n          videoThumbnailWidth,\n          thumbnail,\n          playingMode\n        } = this;\n        const {\n          [videoId]: currentVideoData = {}\n        } = mediaData;\n        const {\n          duration,\n          name\n        } = currentVideoData;\n        const thumbnailUrl = thumbnail || _internal_vendor_carbon_ibmdotcom_services_services_KalturaPlayer_KalturaPlayer_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].getThumbnailUrl({\n          mediaId: videoId,\n          width: String(videoThumbnailWidth)\n        });\n        return (0,lit__WEBPACK_IMPORTED_MODULE_3__.html)(_t || (_t = _`\n      <c4d-video-player\n        part=\"video-player\"\n        duration=\"${0}\"\n        ?hide-caption=${0}\n        name=\"${0}\"\n        video-description=\"${0}\"\n        thumbnail-url=\"${0}\"\n        video-id=\"${0}\"\n        aspect-ratio=\"${0}\"\n        .formatCaption=\"${0}\"\n        .formatDuration=\"${0}\"\n        playing-mode=\"${0}\">\n      </c4d-video-player>\n    `), (0,lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_5__.ifDefined)(duration), hideCaption, (0,lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_5__.ifDefined)(caption || name), (0,lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_5__.ifDefined)(customVideoDescription), (0,lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_5__.ifDefined)(thumbnailUrl), (0,lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_5__.ifDefined)(videoId), (0,lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_5__.ifDefined)(aspectRatio), (0,lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_5__.ifDefined)(formatCaption), (0,lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_5__.ifDefined)(formatDuration), (0,lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_5__.ifDefined)(playingMode));\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return (0,lit__WEBPACK_IMPORTED_MODULE_3__.html)(_t2 || (_t2 = _` <slot></slot> `));\n      }\n\n      /**\n       * A selector selecting the video player component.\n       */\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"selectorVideoPlayer\",\n      value: function () {\n        return `${c4dPrefix}-video-player`;\n      }\n\n      /**\n       * The name of the custom event fired after video content state is changed upon a user gesture.\n       */\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"eventContentStateChange\",\n      value: function () {\n        return `${c4dPrefix}-video-player-content-state-changed`;\n      }\n\n      /**\n       * The name of the custom event fired requesting playback state change.\n       */\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"eventPlaybackStateChange\",\n      value: function () {\n        return `${c4dPrefix}-video-player-playback-state-changed`;\n      }\n    }]\n  };\n}, (0,_globals_mixins_hybrid_render_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"])((0,_internal_vendor_carbon_web_components_globals_mixins_host_listener_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(lit__WEBPACK_IMPORTED_MODULE_3__.LitElement)));\n/* @__GENERATE_REACT_CUSTOM_ELEMENT_TYPE__ */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (C4DVideoPlayerComposite);\n//# sourceMappingURL=video-player-composite.js.map\n\n\n//# sourceURL=webpack://ibmdotcom-web-components-test/./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player-composite.js?");

/***/ }),

/***/ "./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player-container.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player-container.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   C4DVideoPlayerContainerMixin: () => (/* binding */ C4DVideoPlayerContainerMixin),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   mapDispatchToProps: () => (/* binding */ mapDispatchToProps),\n/* harmony export */   mapStateToProps: () => (/* binding */ mapStateToProps)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_decorate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/decorate */ \"./node_modules/@babel/runtime/helpers/esm/decorate.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! redux */ \"./node_modules/redux/es/redux.js\");\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _carbon_ibmdotcom_services_es_services_KalturaPlayer_KalturaPlayer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @carbon/ibmdotcom-services/es/services/KalturaPlayer/KalturaPlayer.js */ \"./node_modules/@carbon/ibmdotcom-services/es/services/KalturaPlayer/KalturaPlayer.js\");\n/* harmony import */ var _internal_vendor_carbon_ibmdotcom_utilities_utilities_settings_settings_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js\");\n/* harmony import */ var _internal_vendor_carbon_ibmdotcom_services_store_store_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../internal/vendor/@carbon/ibmdotcom-services-store/store.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/ibmdotcom-services-store/store.js\");\n/* harmony import */ var _internal_vendor_carbon_ibmdotcom_services_store_actions_kalturaPlayerAPI_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../internal/vendor/@carbon/ibmdotcom-services-store/actions/kalturaPlayerAPI.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/ibmdotcom-services-store/actions/kalturaPlayerAPI.js\");\n/* harmony import */ var _globals_mixins_connect_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../globals/mixins/connect.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/globals/mixins/connect.js\");\n/* harmony import */ var _globals_mixins_stable_selector_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../globals/mixins/stable-selector.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/globals/mixins/stable-selector.js\");\n/* harmony import */ var _video_player_composite_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./video-player-composite.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player-composite.js\");\n/* harmony import */ var _internal_vendor_carbon_web_components_globals_decorators_carbon_element_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js\");\n\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\n\n\n\n\n\n\nconst {\n  stablePrefix: c4dPrefix\n} = _internal_vendor_carbon_ibmdotcom_utilities_utilities_settings_settings_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\n\n/**\n * The Redux state used for `<c4d-video-player-container>`.\n */\n\n/**\n * The properties for `<c4d-video-player-container>` from Redux state.\n */\n\n/**\n * @param state The Redux state for video player.\n * @returns The converted version of the given state, tailored for `<c4d-video-player-container>`.\n */\nfunction mapStateToProps(state) {\n  const {\n    kalturaPlayerAPI\n  } = state;\n  const {\n    mediaData\n  } = kalturaPlayerAPI !== null && kalturaPlayerAPI !== void 0 ? kalturaPlayerAPI : {};\n  return !mediaData ? {} : {\n    mediaData\n  };\n}\n\n/**\n * @param dispatch The Redux `dispatch()` API.\n * @returns The methods in `<c4d-video-player-container>` to dispatch Redux actions.\n */\nfunction mapDispatchToProps(dispatch) {\n  return (0,redux__WEBPACK_IMPORTED_MODULE_11__.bindActionCreators)({\n    _loadVideoData: _internal_vendor_carbon_ibmdotcom_services_store_actions_kalturaPlayerAPI_js__WEBPACK_IMPORTED_MODULE_6__.loadMediaData\n  }, dispatch // TS definition of `bindActionCreators()` seems to have no templated `Dispatch`\n  );\n}\n\n/**\n * @param Base The base class.\n * @returns A mix-in that implements video embedding API calls.\n */\nconst C4DVideoPlayerContainerMixin = Base => {\n  /**\n   * A mix-in class that sets up and cleans up event listeners defined by `@HostListener` decorator.\n   */\n  class C4DVideoPlayerContainerMixinImpl extends (0,_globals_mixins_stable_selector_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(Base) {\n    constructor(...args) {\n      var _this;\n      super(...args);\n      _this = this;\n      /**\n       * The video player.\n       */\n      /**\n       * The embedded Kaltura player element (that has `.sendNotification()`, etc. APIs), keyed by the video ID.\n       */\n      /**\n       * The request for the embedded Kaltura player element (that has `.sendNotification()`, etc. APIs), keyed by the video ID.\n       *\n       * @protected\n       */\n      // Not using TypeScript `private` due to: microsoft/TypeScript#17744\n      (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, \"_requestsEmbedVideo\", {});\n      /**\n       * Sends the API call for embedding video for the given video ID, and tracks the progress and the error of the REST call.\n       *\n       * @param videoId The video ID.\n       * @internal\n       */\n      (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, \"_embedMedia\", async function (videoId, backgroundMode = false) {\n        const {\n          _requestsEmbedVideo: requestsEmbedVideo\n        } = _this;\n        const requestEmbedVideo = requestsEmbedVideo[videoId];\n        if (requestEmbedVideo) {\n          return requestEmbedVideo;\n        }\n        const promiseEmbedVideo = _this._embedVideoImpl(videoId, backgroundMode);\n        _this._setRequestEmbedVideoInProgress(videoId, promiseEmbedVideo);\n        try {\n          _this._setEmbeddedVideo(videoId, await promiseEmbedVideo);\n        } catch (error) {\n          _this._setErrorRequestEmbedVideo(videoId, error);\n        }\n        return promiseEmbedVideo;\n      });\n      (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, \"prefersAutoplayStorageKey\", `${c4dPrefix}-background-video-prefers-autoplay`);\n    }\n    /**\n     * Sets the state that the API call for embedding the video for the given video ID is in progress.\n     *\n     * @param videoId The video ID.\n     * @param request The promise of the API call for embedding the video of the given video ID that is in progress.\n     * @private\n     */\n    // Not using TypeScript `private` due to: microsoft/TypeScript#17744\n    _setRequestEmbedVideoInProgress(videoId, request) {\n      const {\n        _requestsEmbedVideo: oldRequestsEmbedVideo\n      } = this;\n      this._requestsEmbedVideo = _objectSpread(_objectSpread({}, oldRequestsEmbedVideo), {}, {\n        [videoId]: request\n      });\n    }\n\n    /**\n     * Set the state that the API call for embedding the video for the given video ID is failed.\n     *\n     * @param videoId The video ID.\n     * @param error An error from the API call for embedding the video of the given video ID.\n     * @private\n     */\n    // Not using TypeScript `private` due to: microsoft/TypeScript#17744\n    _setErrorRequestEmbedVideo(videoId, error) {\n      this._setRequestEmbedVideoInProgress(videoId, Promise.reject(error));\n    }\n\n    /**\n     * Sets the given embedded Kaltura player element (that has `.sendNotification()`, etc. APIs) for the given video ID.\n     *\n     * @param videoId The video ID.\n     * @param kWidget The embedded Kaltura player element (that has `.sendNotification()`, etc. APIs).\n     * @private\n     */\n    // Not using TypeScript `private` due to: microsoft/TypeScript#17744\n    _setEmbeddedVideo(videoId, kWidget) {\n      this._setRequestEmbedVideoInProgress(videoId, Promise.resolve(kWidget));\n      const {\n        embeddedVideos: oldEmbeddedVideos\n      } = this;\n      this.embeddedVideos = _objectSpread(_objectSpread({}, oldEmbeddedVideos), {}, {\n        [videoId]: kWidget\n      });\n    }\n    _setAutoplayPreference(preference) {\n      const updatedValue = preference ? '1' : '0';\n      localStorage.setItem(`${this.prefersAutoplayStorageKey}`, updatedValue);\n    }\n    _getAutoplayPreference() {\n      const storedValue = localStorage.getItem(`${this.prefersAutoplayStorageKey}`);\n      const returnValue = storedValue === null ? null : Boolean(parseInt(storedValue, 10));\n      return returnValue;\n    }\n    _getPlayerOptions(backgroundMode = false) {\n      let playerOptions = {};\n      if (backgroundMode) {\n        const storedMotionPreference = this._getAutoplayPreference();\n        let autoplayPreference;\n        if (storedMotionPreference === null) {\n          autoplayPreference = !window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n        } else {\n          autoplayPreference = storedMotionPreference;\n        }\n        playerOptions = {\n          'topBarContainer.plugin': false,\n          'controlBarContainer.plugin': false,\n          'largePlayBtn.plugin': false,\n          'loadingSpinner.plugin': false,\n          'unMuteOverlayButton.plugin': false,\n          'EmbedPlayer.DisableVideoTagSupport': false,\n          loop: true,\n          autoMute: true,\n          autoPlay: autoplayPreference,\n          // Turn off CTA's including mid-roll card and end cards.\n          'ibm.callToActions': false,\n          // Turn off captions display, background/ambient videos have no\n          // audio.\n          closedCaptions: {\n            plugin: false\n          }\n        };\n      }\n      return playerOptions;\n    }\n\n    /**\n     * Sets up and sends the API call for embedding video for the given video ID.\n     *\n     * @param videoId The video ID.\n     * @private\n     */\n    // Not using TypeScript `private` due to: microsoft/TypeScript#17744\n    async _embedVideoImpl(videoId, backgroundMode = false) {\n      var _getElementById;\n      const doc = Object.prototype.hasOwnProperty.call(this, 'getRootNode') ? this.getRootNode() : this.ownerDocument;\n      // Given Kaltura replaces the `<div>` here with `<iframe>` with the video player,\n      // rendering this `<div>` in `renderLightDOM()` will cause the video player being clobbered\n      const playerId = Math.random().toString(36).slice(2);\n      const div = document.createElement('div');\n      div.id = playerId;\n      div.className = `${c4dPrefix}--video-player__video`;\n      const {\n        _videoPlayer: videoPlayer\n      } = this;\n      if (!videoPlayer) {\n        throw new TypeError('Cannot find the video player component to put the video content into.');\n      }\n      videoPlayer.appendChild(div);\n      const embedVideoHandle = await _carbon_ibmdotcom_services_es_services_KalturaPlayer_KalturaPlayer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].embedMedia(videoId, playerId, this._getPlayerOptions(backgroundMode));\n      const {\n        width,\n        height\n      } = await _carbon_ibmdotcom_services_es_services_KalturaPlayer_KalturaPlayer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].api(videoId);\n      videoPlayer.style.setProperty('--native-file-width', `${width}px`);\n      videoPlayer.style.setProperty('--native-file-height', `${height}px`);\n      videoPlayer.style.setProperty('--native-file-aspect-ratio', `${width} / ${height}`);\n      doc.getElementById(playerId).dataset.videoId = videoId;\n      const videoEmbed = (_getElementById = doc.getElementById(playerId)) === null || _getElementById === void 0 ? void 0 : _getElementById.firstElementChild;\n      if (videoEmbed) {\n        videoEmbed.focus();\n      }\n      return embedVideoHandle.kWidget();\n    }\n    /**\n     * Calls the data-* attribute transpose function to target `c4d-video-player`'s button element.\n     */\n    firstUpdated() {\n      window.requestAnimationFrame(() => {\n        var _this$querySelector;\n        const button = (_this$querySelector = this.querySelector('c4d-video-player')) === null || _this$querySelector === void 0 || (_this$querySelector = _this$querySelector.shadowRoot) === null || _this$querySelector === void 0 ? void 0 : _this$querySelector.querySelector('button');\n        if (!this.getAttribute('href') && this.getAttribute('video-id')) {\n          this.setAttribute('href', `https://mediacenter.ibm.com/id/${this.getAttribute('video-id')}`);\n        }\n        this.transposeAttributes(button, ['href']);\n      });\n    }\n  }\n  return C4DVideoPlayerContainerMixinImpl;\n};\n\n/**\n * Container component for video player.\n *\n * @element c4d-video-player-container\n */\nlet C4DVideoPlayerContainer = (0,_babel_runtime_helpers_esm_decorate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([(0,_internal_vendor_carbon_web_components_globals_decorators_carbon_element_js__WEBPACK_IMPORTED_MODULE_10__.carbonElement)(`${c4dPrefix}-video-player-container`)], function (_initialize, _ConnectMixin) {\n  class C4DVideoPlayerContainer extends _ConnectMixin {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: C4DVideoPlayerContainer,\n    d: []\n  };\n}, (0,_globals_mixins_connect_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_internal_vendor_carbon_ibmdotcom_services_store_store_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"], mapStateToProps, mapDispatchToProps)(C4DVideoPlayerContainerMixin(_video_player_composite_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"])));\n/* @__GENERATE_REACT_CUSTOM_ELEMENT_TYPE__ */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (C4DVideoPlayerContainer);\n//# sourceMappingURL=video-player-container.js.map\n\n\n//# sourceURL=webpack://ibmdotcom-web-components-test/./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player-container.js?");

/***/ }),

/***/ "./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player.css.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player.css.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/**\n * @license\n *\n * Copyright IBM Corp. 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lit__WEBPACK_IMPORTED_MODULE_0__.css)([\n  '.c4d--video-player,:host(c4d-video-player){color:var(--c4d--video-caption--color,var(--cds-text-secondary,#525252))}.c4d--video-player .c4d--image__img,:host(c4d-video-player) .c4d--image__img{block-size:100%;inline-size:100%}.c4d--video-player:focus,:host(c4d-video-player:focus){outline:none}.c4d--video-player:focus .c4d--video-player__video-container:before,:host(c4d-video-player:focus) .c4d--video-player__video-container:before{border:1px solid var(--cds-focus-inverse,#fff);content:\" \";inset:.125rem;outline:.125rem solid var(--cds-focus,#0f62fe);position:absolute;z-index:1}.c4d--video-player c4d-image,:host(c4d-video-player) c4d-image{padding-block-start:0}.c4d--video-player[background-mode=true] .c4d--video-player__video-container,:host(c4d-video-player[background-mode=true]) .c4d--video-player__video-container{block-size:100%;padding:0}.c4d--video-player[background-mode=true] .c4d--video-player__video,.c4d--video-player[background-mode=true] ::slotted(.c4d--video-player__video),:host(c4d-video-player[background-mode=true]) .c4d--video-player__video,:host(c4d-video-player[background-mode=true]) ::slotted(.c4d--video-player__video){aspect-ratio:var(--native-file-aspect-ratio,16/9);inset:50% 0 0 50%;min-block-size:100%;min-inline-size:100%;translate:-50% -50%}.c4d--video-player .c4d--video-player__image-overlay:focus:before{border:1px solid var(--cds-focus-inverse,#fff);content:\" \";inset:.125rem;outline:.125rem solid var(--cds-focus,#0f62fe);position:absolute;z-index:1}.c4d--video-player .c4d--image,:host(c4d-video-player) c4d-image{block-size:100%;inline-size:100%;position:relative}.c4d--video-player .c4d--image:before,:host(c4d-video-player) c4d-image:before{background-color:var(--cds-border-inverse,#161616);block-size:100%;content:\"\";inline-size:100%;inset-block-start:0;inset-inline-start:0;opacity:0;position:absolute;transition:opacity .15s cubic-bezier(.2,0,.38,.9);z-index:1}@media screen and (prefers-reduced-motion:reduce){.c4d--video-player .c4d--image:before,:host(c4d-video-player) c4d-image:before{transition:none}}.c4d--video-player .c4d--image:hover:before,:host(c4d-video-player) c4d-image:hover:before{opacity:.08}.c4d--video-player__video-container{block-size:0;display:inline-block;inline-size:100%;overflow:hidden;padding-block-start:56.25%;position:relative}.c4d--video-player__video-container:focus{outline:none}.c4d--video-player__video-container .c4d--video-player__video,.c4d--video-player__video-container ::slotted(.c4d--video-player__video){inset:0;position:absolute}.c4d--video-player__video-container.c4d--video-player__aspect-ratio--16x9{block-size:0;overflow:hidden;padding-block-start:56.25%;position:relative}.c4d--video-player__video-container.c4d--video-player__aspect-ratio--9x16{block-size:0;overflow:hidden;padding-block-start:177.7777777778%;position:relative}.c4d--video-player__video-container.c4d--video-player__aspect-ratio--2x1{block-size:0;overflow:hidden;padding-block-start:50%;position:relative}.c4d--video-player__video-container.c4d--video-player__aspect-ratio--1x2{block-size:0;overflow:hidden;padding-block-start:200%;position:relative}.c4d--video-player__video-container.c4d--video-player__aspect-ratio--4x3{block-size:0;overflow:hidden;padding-block-start:75%;position:relative}.c4d--video-player__video-container.c4d--video-player__aspect-ratio--3x4{block-size:0;overflow:hidden;padding-block-start:133.3333333333%;position:relative}.c4d--video-player__video-container.c4d--video-player__aspect-ratio--1x1{block-size:0;overflow:hidden;padding-block-start:100%;position:relative}.c4d--video-player__video-caption{font-size:var(--cds-caption-02-font-size,.875rem);font-weight:var(--cds-caption-02-font-weight,400);letter-spacing:var(--cds-caption-02-letter-spacing,.32px);line-height:var(--cds-caption-02-line-height,1.28572);max-inline-size:90%;padding-block-start:var(--c4d--video-caption--padding,.5rem)}.c4d--video-player__image-overlay{block-size:100%;border:none;cursor:pointer;inline-size:100%;padding:0}.c4d--video-player__image-overlay:focus{outline:3px solid var(--cds-focus,#0f62fe);outline-offset:1px}.c4d--video-player__image-overlay:active svg circle,.c4d--video-player__image-overlay:hover svg circle{fill:#161616;opacity:.9}.c4d--video-player__image-overlay:active svg path,.c4d--video-player__image-overlay:hover svg path{fill:var(--cds-icon-on-color,#fff)}.c4d--video-player__image-overlay svg{inset-block-start:calc(50% - 2rem);inset-inline-end:calc(50% - 2rem);position:absolute}.c4d--video-player__image-overlay svg circle,.c4d--video-player__image-overlay svg path{transition:fill .15s cubic-bezier(.2,0,.38,.9),opacity .15s cubic-bezier(.2,0,.38,.9)}@media screen and (prefers-reduced-motion:reduce){.c4d--video-player__image-overlay svg circle,.c4d--video-player__image-overlay svg path{transition:none}}.c4d--video-player__image-overlay svg circle{opacity:.8}.c4d--video-player .c4d--video-player__image-overlay:active .c4d--image:before,.c4d--video-player .c4d--video-player__image-overlay:active c4d-image:before,:host(c4d-video-player) .c4d--video-player__image-overlay:active .c4d--image:before,:host(c4d-video-player) .c4d--video-player__image-overlay:active c4d-image:before{opacity:.12}',\n]));\n\n\n//# sourceURL=webpack://ibmdotcom-web-components-test/./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player.css.js?");

/***/ }),

/***/ "./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VIDEO_PLAYER_CONTENT_STATE: () => (/* reexport safe */ _defs_js__WEBPACK_IMPORTED_MODULE_11__.VIDEO_PLAYER_CONTENT_STATE),\n/* harmony export */   VIDEO_PLAYER_PLAYING_MODE: () => (/* reexport safe */ _defs_js__WEBPACK_IMPORTED_MODULE_11__.VIDEO_PLAYER_PLAYING_MODE),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_decorate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/decorate */ \"./node_modules/@babel/runtime/helpers/esm/decorate.js\");\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lit/decorators.js */ \"./node_modules/lit/decorators.js\");\n/* harmony import */ var lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lit/directives/class-map.js */ \"./node_modules/lit/directives/class-map.js\");\n/* harmony import */ var lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lit/directives/if-defined.js */ \"./node_modules/lit/directives/if-defined.js\");\n/* harmony import */ var _internal_vendor_carbon_web_components_globals_mixins_focus_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../internal/vendor/@carbon/web-components/globals/mixins/focus.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/web-components/globals/mixins/focus.js\");\n/* harmony import */ var _es_icons_play_video_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../es/icons/play-video.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/icons/play-video.js\");\n/* harmony import */ var _internal_vendor_carbon_ibmdotcom_utilities_utilities_formatVideoCaption_formatVideoCaption_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/formatVideoCaption/formatVideoCaption.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/ibmdotcom-utilities/utilities/formatVideoCaption/formatVideoCaption.js\");\n/* harmony import */ var _internal_vendor_carbon_ibmdotcom_utilities_utilities_settings_settings_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js\");\n/* harmony import */ var _internal_vendor_carbon_ibmdotcom_services_services_KalturaPlayer_KalturaPlayer_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../internal/vendor/@carbon/ibmdotcom-services/services/KalturaPlayer/KalturaPlayer.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/ibmdotcom-services/services/KalturaPlayer/KalturaPlayer.js\");\n/* harmony import */ var _defs_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./defs.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/defs.js\");\n/* harmony import */ var _image_image_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../image/image.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/components/image/image.js\");\n/* harmony import */ var _video_player_css_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ././video-player.css.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player.css.js\");\n/* harmony import */ var _globals_mixins_stable_selector_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../globals/mixins/stable-selector.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/globals/mixins/stable-selector.js\");\n/* harmony import */ var _internal_vendor_carbon_web_components_globals_decorators_carbon_element_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js\");\n\n\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst {\n  stablePrefix: c4dPrefix\n} = _internal_vendor_carbon_ibmdotcom_utilities_utilities_settings_settings_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"];\n\n/**\n * Video player.\n *\n * @element c4d-video-player\n * @csspart video - The video. Usage `c4d-video-player::part(video)`\n * @csspart button - The play button. Usage `c4d-video-player::part(button)`\n * @csspart image - The thumbnail image. Usage `c4d-video-player::part(image)`\n * @csspart video-container - The video container. Usage `c4d-video-player::part(video-container)`\n * @csspart caption - The caption. Usage `c4d-video-player::part(caption)`\n */\nlet C4DVideoPlayer = (0,_babel_runtime_helpers_esm_decorate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])([(0,_internal_vendor_carbon_web_components_globals_decorators_carbon_element_js__WEBPACK_IMPORTED_MODULE_15__.carbonElement)(`${c4dPrefix}-video-player`)], function (_initialize, _FocusMixin) {\n  class C4DVideoPlayer extends _FocusMixin {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: C4DVideoPlayer,\n    d: [{\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.property)({\n        reflect: true,\n        attribute: 'playing-mode'\n      })],\n      key: \"playingMode\",\n      value() {\n        return _defs_js__WEBPACK_IMPORTED_MODULE_11__.VIDEO_PLAYER_PLAYING_MODE.INLINE;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleClickOverlay\",\n      value:\n      /**\n       * The video player's mode showing Inline or Lightbox.\n       */\n\n      /**\n       * Handles `click` event on the video thumbnail.\n       */\n      function _handleClickOverlay() {\n        if (this.playingMode === _defs_js__WEBPACK_IMPORTED_MODULE_11__.VIDEO_PLAYER_PLAYING_MODE.INLINE) {\n          this.contentState = _defs_js__WEBPACK_IMPORTED_MODULE_11__.VIDEO_PLAYER_CONTENT_STATE.VIDEO;\n        }\n        const {\n          videoId,\n          name,\n          customVideoDescription\n        } = this;\n        const {\n          eventContentStateChange\n        } = this.constructor;\n        this.dispatchEvent(new CustomEvent(eventContentStateChange, {\n          bubbles: true,\n          composed: true,\n          detail: {\n            videoId,\n            contentState: _defs_js__WEBPACK_IMPORTED_MODULE_11__.VIDEO_PLAYER_CONTENT_STATE.VIDEO,\n            playingMode: this.playingMode,\n            name,\n            customVideoDescription\n          }\n        }));\n      }\n\n      /**\n       * @returns The video content.\n       */\n    }, {\n      kind: \"method\",\n      key: \"_renderContent\",\n      value: function _renderContent() {\n        const {\n          contentState,\n          name,\n          thumbnailUrl,\n          backgroundMode\n        } = this;\n        return contentState === _defs_js__WEBPACK_IMPORTED_MODULE_11__.VIDEO_PLAYER_CONTENT_STATE.THUMBNAIL && !backgroundMode ? (0,lit__WEBPACK_IMPORTED_MODULE_2__.html)(_t || (_t = _`\n          <div class=\"${0}--video-player__video\" part=\"video\">\n            <button\n              class=\"${0}--video-player__image-overlay\"\n              part=\"button\"\n              @click=\"${0}\">\n              <c4d-image\n                default-src=\"${0}\"\n                alt=\"${0}\"\n                part=\"image\">\n                ${0}\n              </c4d-image>\n            </button>\n          </div>\n        `), c4dPrefix, c4dPrefix, this._handleClickOverlay, thumbnailUrl, (0,lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_5__.ifDefined)(name), (0,_es_icons_play_video_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])()) : (0,lit__WEBPACK_IMPORTED_MODULE_2__.html)(_t2 || (_t2 = _` <slot></slot> `));\n      }\n\n      /**\n       * Updates video thumbnail url to match video width\n       */\n    }, {\n      kind: \"method\",\n      key: \"_updateThumbnailUrl\",\n      value: function _updateThumbnailUrl() {\n        let thumbnailSrc = false;\n        try {\n          thumbnailSrc = new URL(this.thumbnailUrl);\n        } catch (error) {\n          // Do nothing.\n        }\n\n        // If current thumbnail is from Kaltura and includes this video's ID we should be able to safely update it.\n        if (thumbnailSrc && thumbnailSrc.host.toLowerCase().includes('kaltura') && thumbnailSrc.pathname.includes(this.videoId)) {\n          this.thumbnailUrl = _internal_vendor_carbon_ibmdotcom_services_services_KalturaPlayer_KalturaPlayer_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"].getThumbnailUrl({\n            mediaId: this.videoId,\n            width: String(this.offsetWidth)\n          });\n        }\n      }\n\n      /**\n       * userInitiatedTogglePlaybackState\n       */\n    }, {\n      kind: \"method\",\n      key: \"userInitiatedTogglePlaybackState\",\n      value: function userInitiatedTogglePlaybackState() {\n        const {\n          videoId\n        } = this;\n        const {\n          eventPlaybackStateChange\n        } = this.constructor;\n        this.dispatchEvent(new CustomEvent(eventPlaybackStateChange, {\n          bubbles: true,\n          composed: true,\n          detail: {\n            videoId,\n            playingMode: this.playingMode\n          }\n        }));\n      }\n\n      /**\n       * The video player's content state.\n       */\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.property)({\n        reflect: true,\n        attribute: 'content-state'\n      })],\n      key: \"contentState\",\n      value() {\n        return _defs_js__WEBPACK_IMPORTED_MODULE_11__.VIDEO_PLAYER_CONTENT_STATE.THUMBNAIL;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.property)({\n        type: Number\n      })],\n      key: \"duration\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.property)({\n        attribute: false\n      })],\n      key: \"formatCaption\",\n      value() {\n        return _internal_vendor_carbon_ibmdotcom_utilities_utilities_formatVideoCaption_formatVideoCaption_js__WEBPACK_IMPORTED_MODULE_8__.formatVideoCaption;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.property)({\n        attribute: false\n      })],\n      key: \"formatDuration\",\n      value() {\n        return _internal_vendor_carbon_ibmdotcom_utilities_utilities_formatVideoCaption_formatVideoCaption_js__WEBPACK_IMPORTED_MODULE_8__.formatVideoDuration;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.property)({\n        type: Boolean,\n        attribute: 'hide-caption'\n      })],\n      key: \"hideCaption\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.property)()],\n      key: \"name\",\n      value() {\n        return '';\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.property)({\n        attribute: 'background-mode',\n        reflect: true\n      })],\n      key: \"backgroundMode\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.property)({\n        attribute: 'video-description'\n      })],\n      key: \"customVideoDescription\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.property)({\n        attribute: 'thumbnail-url'\n      })],\n      key: \"thumbnailUrl\",\n      value() {\n        return '';\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.property)({\n        attribute: 'video-id'\n      })],\n      key: \"videoId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.property)({\n        attribute: 'aspect-ratio'\n      })],\n      key: \"aspectRatio\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value:\n      /**\n       * The video duration.\n       */\n      /**\n       * The formatter for the video caption, composed with the video name and the video duration.\n       * Should be changed upon the locale the UI is rendered with.\n       */\n      /**\n       * The formatter for the video duration.\n       * Should be changed upon the locale the UI is rendered with.\n       */\n      /**\n       * `true` to hide the caption.\n       */\n      /**\n       * The video name.\n       */\n      /**\n       * `true` to autoplay, mute video, and hide UI\n       */\n      /**\n       * Custom video description. This property should only be set when using `playing-mode=\"lightbox\"`\n       */\n      /**\n       * The thumbnail URL.\n       */\n      /**\n       * The video ID.\n       */\n      /**\n       * Override default aspect ratio of `16x9`.\n       * Available aspect ratios:\n       *\n       * `16x9`, `9x16`, `2x1`, `1x2`, `4x3`, `3x4`, `1x1`\n       */\n      function render() {\n        const {\n          aspectRatio,\n          duration,\n          formatCaption,\n          formatDuration,\n          hideCaption,\n          name\n        } = this;\n        const aspectRatioClass = (0,lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_4__.classMap)({\n          [`${c4dPrefix}--video-player__video-container`]: true,\n          [`${c4dPrefix}--video-player__aspect-ratio--${aspectRatio}`]: !!aspectRatio\n        });\n        return (0,lit__WEBPACK_IMPORTED_MODULE_2__.html)(_t3 || (_t3 = _`\n      <div class=\"${0}\" part=\"video-container\">\n        ${0}\n      </div>\n      ${0}\n    `), aspectRatioClass, this._renderContent(), hideCaption ? undefined : (0,lit__WEBPACK_IMPORTED_MODULE_2__.html)(_t4 || (_t4 = _`\n            <div\n              class=\"${0}--video-player__video-caption\"\n              part=\"caption\">\n              ${0}\n            </div>\n          `), c4dPrefix, formatCaption({\n          duration: formatDuration({\n            duration: !duration ? duration : duration * 1000\n          }),\n          name\n        })));\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProperties) {\n        if (changedProperties.has('duration') || changedProperties.has('formatCaption') || changedProperties.has('name') || changedProperties.has('backgroundMode')) {\n          const {\n            duration,\n            formatCaption,\n            formatDuration,\n            name\n          } = this;\n          const caption = formatCaption({\n            duration: formatDuration({\n              duration: !duration ? duration : duration * 1000\n            }),\n            name\n          });\n          if (caption) {\n            this.setAttribute('aria-label', caption);\n          }\n        }\n\n        // Move measurement & API call to callback queue & wait for update to complete.\n        setTimeout(async () => {\n          await this.updateComplete;\n          if (!this.thumbnailUrl.endsWith(`${this.offsetWidth}`)) {\n            this._updateThumbnailUrl();\n          }\n        }, 0);\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated() {\n        var _this$parentElement;\n        this.tabIndex = 0;\n        const parentIsBackground = Boolean((_this$parentElement = this.parentElement) === null || _this$parentElement === void 0 ? void 0 : _this$parentElement.backgroundMode);\n        this.backgroundMode = parentIsBackground;\n      }\n\n      /**\n       * The name of the custom event fired after video content state is changed upon a user gesture.\n       */\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"eventContentStateChange\",\n      value: function () {\n        return `${c4dPrefix}-video-player-content-state-changed`;\n      }\n\n      /**\n       * The name of the custom event fired requesting playback state change.\n       */\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"eventPlaybackStateChange\",\n      value: function () {\n        return `${c4dPrefix}-video-player-playback-state-changed`;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"stableSelector\",\n      value: function () {\n        return `${c4dPrefix}--video-player`;\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"shadowRootOptions\",\n      value() {\n        return _objectSpread(_objectSpread({}, lit__WEBPACK_IMPORTED_MODULE_2__.LitElement.shadowRootOptions), {}, {\n          delegatesFocus: true\n        });\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"styles\",\n      value() {\n        return _video_player_css_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"];\n      }\n    }]\n  };\n}, (0,_internal_vendor_carbon_web_components_globals_mixins_focus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])((0,_globals_mixins_stable_selector_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(lit__WEBPACK_IMPORTED_MODULE_2__.LitElement)));\n/* @__GENERATE_REACT_CUSTOM_ELEMENT_TYPE__ */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (C4DVideoPlayer);\n//# sourceMappingURL=video-player.js.map\n\n\n//# sourceURL=webpack://ibmdotcom-web-components-test/./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player.js?");

/***/ })

}]);