"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkibmdotcom_web_components_test"] = self["webpackChunkibmdotcom_web_components_test"] || []).push([["vendors-node_modules_carbon_ibmdotcom-web-components_es_components_video-player_index_js"],{

/***/ "./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/defs.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/defs.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.VIDEO_PLAYER_PLAYING_MODE = exports.VIDEO_PLAYER_CONTENT_STATE = void 0;\n/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * Video player's content state.\n */\nvar VIDEO_PLAYER_CONTENT_STATE;\n/**\n * Video player's playing mode.\n */\n(function (VIDEO_PLAYER_CONTENT_STATE) {\n  VIDEO_PLAYER_CONTENT_STATE[\"THUMBNAIL\"] = \"thumbnail\";\n  VIDEO_PLAYER_CONTENT_STATE[\"VIDEO\"] = \"video\";\n})(VIDEO_PLAYER_CONTENT_STATE || (exports.VIDEO_PLAYER_CONTENT_STATE = VIDEO_PLAYER_CONTENT_STATE = {}));\nvar VIDEO_PLAYER_PLAYING_MODE;\n(function (VIDEO_PLAYER_PLAYING_MODE) {\n  VIDEO_PLAYER_PLAYING_MODE[\"INLINE\"] = \"inline\";\n  VIDEO_PLAYER_PLAYING_MODE[\"LIGHTBOX\"] = \"lightbox\";\n})(VIDEO_PLAYER_PLAYING_MODE || (exports.VIDEO_PLAYER_PLAYING_MODE = VIDEO_PLAYER_PLAYING_MODE = {}));\n//# sourceMappingURL=defs.js.map\n\n\n//# sourceURL=webpack://ibmdotcom-web-components-test/./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/defs.js?");

/***/ }),

/***/ "./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n__webpack_require__(/*! ./video-player-container.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player-container.js\");\n//# sourceMappingURL=index.js.map\n\n\n//# sourceURL=webpack://ibmdotcom-web-components-test/./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/index.js?");

/***/ }),

/***/ "./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player-composite.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player-composite.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _taggedTemplateLiteral2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/taggedTemplateLiteral */ \"./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\"));\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\"));\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\"));\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\"));\nvar _decorate2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/decorate */ \"./node_modules/@babel/runtime/helpers/esm/decorate.js\"));\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/get */ \"./node_modules/@babel/runtime/helpers/esm/get.js\"));\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\"));\nvar _lit = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\nvar _decorators = __webpack_require__(/*! lit/decorators.js */ \"./node_modules/lit/decorators.js\");\nvar _ifDefined = __webpack_require__(/*! lit/directives/if-defined.js */ \"./node_modules/lit/directives/if-defined.js\");\nvar _hostListener = _interopRequireDefault(__webpack_require__(/*! ../../internal/vendor/@carbon/web-components/globals/decorators/host-listener.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/web-components/globals/decorators/host-listener.js\"));\nvar _hostListener2 = _interopRequireDefault(__webpack_require__(/*! ../../internal/vendor/@carbon/web-components/globals/mixins/host-listener.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/web-components/globals/mixins/host-listener.js\"));\nvar _settings = _interopRequireDefault(__webpack_require__(/*! ../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js\"));\nvar _KalturaPlayer = _interopRequireDefault(__webpack_require__(/*! ../../internal/vendor/@carbon/ibmdotcom-services/services/KalturaPlayer/KalturaPlayer.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/ibmdotcom-services/services/KalturaPlayer/KalturaPlayer.js\"));\nvar _hybridRender = _interopRequireDefault(__webpack_require__(/*! ../../globals/mixins/hybrid-render.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/globals/mixins/hybrid-render.js\"));\nvar _videoPlayer2 = __webpack_require__(/*! ./video-player.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player.js\");\nvar _carbonElement = __webpack_require__(/*! ../../internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js\");\nvar _templateObject, _templateObject2;\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2[\"default\"])(o), (0, _possibleConstructorReturn2[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } /**\n * @license\n *\n * Copyright IBM Corp. 2020, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */ // Above import is interface-only ref and thus code won't be brought into the build\n// Above import is interface-only ref and thus code won't be brought into the build\n// Above import is interface-only ref and thus code won't be brought into the build\nvar c4dPrefix = _settings[\"default\"].stablePrefix;\n\n/**\n * Component that renders video player from its metadata, etc.\n *\n * @element c4d-video-player-composite\n */\nvar C4DVideoPlayerComposite = (0, _decorate2[\"default\"])([(0, _carbonElement.carbonElement)(\"\".concat(c4dPrefix, \"-video-player-composite\"))], function (_initialize, _HybridRenderMixin) {\n  var C4DVideoPlayerComposite = /*#__PURE__*/function (_HybridRenderMixin2) {\n    function C4DVideoPlayerComposite() {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, C4DVideoPlayerComposite);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, C4DVideoPlayerComposite, [].concat(args));\n      _initialize(_this);\n      return _this;\n    }\n    (0, _inherits2[\"default\"])(C4DVideoPlayerComposite, _HybridRenderMixin2);\n    return (0, _createClass2[\"default\"])(C4DVideoPlayerComposite);\n  }(_HybridRenderMixin);\n  return {\n    F: C4DVideoPlayerComposite,\n    d: [{\n      kind: \"method\",\n      key: \"_activateEmbeddedVideo\",\n      value:\n      /**\n       * The placeholder for `_loadVideoData()` Redux action that may be mixed in.\n       *\n       * @internal\n       */\n\n      /**\n       * The placeholder for `_loadVideoData()` Redux action that may be mixed in.\n       *\n       * @internal\n       */\n\n      /**\n       * The placeholder for `_setAutoplayPreference()` Redux action that may be mixed in.\n       */\n      // @ts-ignore\n\n      /**\n       * The placeholder for `_getAutoplayPreference()` Redux action that may be mixed in.\n       */\n      // @ts-ignore\n\n      /**\n       * Activate the DOM nodes for the embedded video of the given video ID, and deactivates others.\n       *\n       * @param videoId The video ID to activate.\n       */\n      function _activateEmbeddedVideo(videoId) {\n        var _this$embeddedVideos = this.embeddedVideos,\n          embeddedVideos = _this$embeddedVideos === void 0 ? {} : _this$embeddedVideos;\n        Object.keys(embeddedVideos).forEach(function (key) {\n          embeddedVideos[key].sendNotification(key === videoId ? 'doPlay' : 'doStop');\n        });\n      }\n\n      /**\n       * The video player.\n       */\n    }, {\n      kind: \"get\",\n      key: \"_videoPlayer\",\n      value: function _videoPlayer() {\n        var _ref = this.constructor,\n          selectorVideoPlayer = _ref.selectorVideoPlayer;\n        return this.querySelector(selectorVideoPlayer);\n      }\n\n      /**\n       * Handles `c4d-video-player-content-state-changed` event.\n       * Such event is fired when user changes video content state, e.g. from thumbnail to video player.\n       *\n       * @param event The event.\n       */\n    }, {\n      kind: \"method\",\n      decorators: [(0, _hostListener[\"default\"])('eventContentStateChange')],\n      key: \"_handleContentStateChange\",\n      value: function _handleContentStateChange(event) {\n        var _event$detail = event.detail,\n          contentState = _event$detail.contentState,\n          playingMode = _event$detail.playingMode,\n          videoId = _event$detail.videoId;\n        if (contentState === _videoPlayer2.VIDEO_PLAYER_CONTENT_STATE.VIDEO && playingMode === _videoPlayer2.VIDEO_PLAYER_PLAYING_MODE.INLINE && videoId) {\n          var _this$_embedMedia;\n          (_this$_embedMedia = this._embedMedia) === null || _this$_embedMedia === void 0 || _this$_embedMedia.call(this, videoId, this.backgroundMode);\n        }\n      }\n    }, {\n      kind: \"method\",\n      decorators: [(0, _hostListener[\"default\"])('eventPlaybackStateChange')],\n      key: \"_handlePlaybackStateChange\",\n      value: function _handlePlaybackStateChange(event) {\n        var videoId = event.detail.videoId;\n        var _this$embeddedVideos2 = this.embeddedVideos,\n          embeddedVideos = _this$embeddedVideos2 === void 0 ? {} : _this$embeddedVideos2;\n        if (this.isPlaying) {\n          embeddedVideos[videoId].sendNotification('doPause');\n          this.isPlaying = false;\n        } else {\n          embeddedVideos[videoId].sendNotification('doPlay');\n          this.isPlaying = true;\n        }\n        this._setAutoplayPreference(this.isPlaying);\n      }\n    }, {\n      kind: \"method\",\n      key: \"pauseAllVideos\",\n      value: function pauseAllVideos() {\n        var _this$embeddedVideos3 = this.embeddedVideos,\n          embeddedVideos = _this$embeddedVideos3 === void 0 ? {} : _this$embeddedVideos3;\n        Object.keys(embeddedVideos).forEach(function (videoId) {\n          embeddedVideos[videoId].sendNotification('doPause');\n        });\n        this.isPlaying = false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"playAllVideos\",\n      value: function playAllVideos() {\n        var _this$embeddedVideos4 = this.embeddedVideos,\n          embeddedVideos = _this$embeddedVideos4 === void 0 ? {} : _this$embeddedVideos4;\n        Object.keys(embeddedVideos).forEach(function (videoId) {\n          embeddedVideos[videoId].sendNotification('doPlay');\n        });\n        this.isPlaying = true;\n      }\n\n      /**\n       * `true` to autoplay the videos.\n       */\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        type: Boolean,\n        attribute: 'auto-play'\n      })],\n      key: \"autoPlay\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        attribute: false\n      })],\n      key: \"embeddedVideos\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        reflect: true,\n        attribute: 'caption'\n      })],\n      key: \"caption\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        reflect: true,\n        attribute: 'video-description'\n      })],\n      key: \"customVideoDescription\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        attribute: false\n      })],\n      key: \"formatCaption\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        attribute: false\n      })],\n      key: \"formatDuration\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        type: Boolean,\n        attribute: 'hide-caption'\n      })],\n      key: \"hideCaption\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        type: Boolean,\n        attribute: 'background-mode'\n      })],\n      key: \"backgroundMode\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        attribute: false\n      })],\n      key: \"mediaData\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        attribute: 'video-id'\n      })],\n      key: \"videoId\",\n      value: function value() {\n        return '';\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        attribute: 'aspect-ratio'\n      })],\n      key: \"aspectRatio\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)()],\n      key: \"isPlaying\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        reflect: true,\n        attribute: 'playing-mode'\n      })],\n      key: \"playingMode\",\n      value: function value() {\n        return _videoPlayer2.VIDEO_PLAYER_PLAYING_MODE.INLINE;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        reflect: true,\n        attribute: 'thumbnail'\n      })],\n      key: \"thumbnail\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        type: Number,\n        attribute: 'video-thumbnail-width'\n      })],\n      key: \"videoThumbnailWidth\",\n      value: function value() {\n        return 3;\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value:\n      /**\n       * The embedded Kaltura player element (that has `.sendNotification()`, etc. APIs), keyed by the video ID.\n       */\n      /**\n       * Optional custom video caption.\n       */\n      /**\n       * Custom video description. This property should only be set when `playing-mode=\"lightbox\"`.\n       */\n      /**\n       * The formatter for the video caption, composed with the video name and the video duration.\n       * Should be changed upon the locale the UI is rendered with.\n       */\n      /**\n       * The formatter for the video duration.\n       * Should be changed upon the locale the UI is rendered with.\n       */\n      /**\n       * `true` to hide the caption.\n       */\n      /**\n       * `true` to autoplay, mute, and hide player UI.\n       */\n      /**\n       * The video data, keyed by the video ID.\n       */\n      /**\n       * The video ID.\n       */\n      /**\n       * The aspect ratio.\n       */\n      /**\n       * The current playback state\n       */\n      /**\n       * The video player's mode showing Inline or Lightbox.\n       */\n      /**\n       * Optional custom video thumbnail\n       */\n      /**\n       * The video thumbnail width.\n       */\n      function connectedCallback() {\n        (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(C4DVideoPlayerComposite.prototype), \"connectedCallback\", this).call(this);\n        if (this.backgroundMode) {\n          this.hideCaption = true;\n        }\n        if (this.autoPlay || this.backgroundMode) {\n          var storedPreference = this._getAutoplayPreference();\n          if (storedPreference === null) {\n            this.isPlaying = !window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n          } else {\n            this.isPlaying = storedPreference;\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProperties) {\n        if (changedProperties.has('videoId')) {\n          var autoPlay = this.autoPlay,\n            videoId = this.videoId,\n            backgroundMode = this.backgroundMode;\n          this._activateEmbeddedVideo(videoId);\n          if (videoId) {\n            var _this$_loadVideoData;\n            (_this$_loadVideoData = this._loadVideoData) === null || _this$_loadVideoData === void 0 || _this$_loadVideoData.call(this, videoId);\n            if (autoPlay || backgroundMode) {\n              var _this$_embedMedia2;\n              (_this$_embedMedia2 = this._embedMedia) === null || _this$_embedMedia2 === void 0 || _this$_embedMedia2.call(this, videoId, backgroundMode);\n            }\n          }\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"renderLightDOM\",\n      value: function renderLightDOM() {\n        var aspectRatio = this.aspectRatio,\n          formatCaption = this.formatCaption,\n          formatDuration = this.formatDuration,\n          hideCaption = this.hideCaption,\n          caption = this.caption,\n          customVideoDescription = this.customVideoDescription,\n          _this$mediaData = this.mediaData,\n          mediaData = _this$mediaData === void 0 ? {} : _this$mediaData,\n          videoId = this.videoId,\n          videoThumbnailWidth = this.videoThumbnailWidth,\n          thumbnail = this.thumbnail,\n          playingMode = this.playingMode;\n        var _mediaData$videoId = mediaData[videoId],\n          currentVideoData = _mediaData$videoId === void 0 ? {} : _mediaData$videoId;\n        var duration = currentVideoData.duration,\n          name = currentVideoData.name;\n        var thumbnailUrl = thumbnail || _KalturaPlayer[\"default\"].getThumbnailUrl({\n          mediaId: videoId,\n          width: String(videoThumbnailWidth)\n        });\n        return (0, _lit.html)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n      <c4d-video-player\\n        duration=\\\"\", \"\\\"\\n        ?hide-caption=\", \"\\n        name=\\\"\", \"\\\"\\n        video-description=\\\"\", \"\\\"\\n        thumbnail-url=\\\"\", \"\\\"\\n        video-id=\\\"\", \"\\\"\\n        aspect-ratio=\\\"\", \"\\\"\\n        .formatCaption=\\\"\", \"\\\"\\n        .formatDuration=\\\"\", \"\\\"\\n        playing-mode=\\\"\", \"\\\">\\n      </c4d-video-player>\\n    \"])), (0, _ifDefined.ifDefined)(duration), hideCaption, (0, _ifDefined.ifDefined)(caption || name), (0, _ifDefined.ifDefined)(customVideoDescription), (0, _ifDefined.ifDefined)(thumbnailUrl), (0, _ifDefined.ifDefined)(videoId), (0, _ifDefined.ifDefined)(aspectRatio), (0, _ifDefined.ifDefined)(formatCaption), (0, _ifDefined.ifDefined)(formatDuration), (0, _ifDefined.ifDefined)(playingMode));\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return (0, _lit.html)(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\" <slot></slot> \"])));\n      }\n\n      /**\n       * A selector selecting the video player component.\n       */\n    }, {\n      kind: \"get\",\n      \"static\": true,\n      key: \"selectorVideoPlayer\",\n      value: function selectorVideoPlayer() {\n        return \"\".concat(c4dPrefix, \"-video-player\");\n      }\n\n      /**\n       * The name of the custom event fired after video content state is changed upon a user gesture.\n       */\n    }, {\n      kind: \"get\",\n      \"static\": true,\n      key: \"eventContentStateChange\",\n      value: function eventContentStateChange() {\n        return \"\".concat(c4dPrefix, \"-video-player-content-state-changed\");\n      }\n\n      /**\n       * The name of the custom event fired requesting playback state change.\n       */\n    }, {\n      kind: \"get\",\n      \"static\": true,\n      key: \"eventPlaybackStateChange\",\n      value: function eventPlaybackStateChange() {\n        return \"\".concat(c4dPrefix, \"-video-player-playback-state-changed\");\n      }\n    }]\n  };\n}, (0, _hybridRender[\"default\"])((0, _hostListener2[\"default\"])(_lit.LitElement)));\n/* @__GENERATE_REACT_CUSTOM_ELEMENT_TYPE__ */\nvar _default = exports[\"default\"] = C4DVideoPlayerComposite;\n//# sourceMappingURL=video-player-composite.js.map\n\n\n//# sourceURL=webpack://ibmdotcom-web-components-test/./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player-composite.js?");

/***/ }),

/***/ "./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player-container.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player-container.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = exports.C4DVideoPlayerContainerMixin = void 0;\nexports.mapDispatchToProps = mapDispatchToProps;\nexports.mapStateToProps = mapStateToProps;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _decorate2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/decorate */ \"./node_modules/@babel/runtime/helpers/esm/decorate.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\"));\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\"));\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\"));\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\"));\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\"));\nvar _redux = __webpack_require__(/*! redux */ \"./node_modules/redux/es/redux.js\");\n__webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\nvar _KalturaPlayer = _interopRequireDefault(__webpack_require__(/*! @carbon/ibmdotcom-services/es/services/KalturaPlayer/KalturaPlayer.js */ \"./node_modules/@carbon/ibmdotcom-services/es/services/KalturaPlayer/KalturaPlayer.js\"));\nvar _settings = _interopRequireDefault(__webpack_require__(/*! ../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js\"));\nvar _store = _interopRequireDefault(__webpack_require__(/*! ../../internal/vendor/@carbon/ibmdotcom-services-store/store.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/ibmdotcom-services-store/store.js\"));\nvar _kalturaPlayerAPI = __webpack_require__(/*! ../../internal/vendor/@carbon/ibmdotcom-services-store/actions/kalturaPlayerAPI.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/ibmdotcom-services-store/actions/kalturaPlayerAPI.js\");\nvar _connect = _interopRequireDefault(__webpack_require__(/*! ../../globals/mixins/connect.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/globals/mixins/connect.js\"));\nvar _stableSelector = _interopRequireDefault(__webpack_require__(/*! ../../globals/mixins/stable-selector.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/globals/mixins/stable-selector.js\"));\nvar _videoPlayerComposite = _interopRequireDefault(__webpack_require__(/*! ./video-player-composite.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player-composite.js\"));\nvar _carbonElement = __webpack_require__(/*! ../../internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2[\"default\"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2[\"default\"])(o), (0, _possibleConstructorReturn2[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } /**\n * @license\n *\n * Copyright IBM Corp. 2020, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar c4dPrefix = _settings[\"default\"].stablePrefix;\n\n/**\n * The Redux state used for `<c4d-video-player-container>`.\n */\n\n/**\n * The properties for `<c4d-video-player-container>` from Redux state.\n */\n\n/**\n * @param state The Redux state for video player.\n * @returns The converted version of the given state, tailored for `<c4d-video-player-container>`.\n */\nfunction mapStateToProps(state) {\n  var kalturaPlayerAPI = state.kalturaPlayerAPI;\n  var _ref = kalturaPlayerAPI !== null && kalturaPlayerAPI !== void 0 ? kalturaPlayerAPI : {},\n    mediaData = _ref.mediaData;\n  return !mediaData ? {} : {\n    mediaData: mediaData\n  };\n}\n\n/**\n * @param dispatch The Redux `dispatch()` API.\n * @returns The methods in `<c4d-video-player-container>` to dispatch Redux actions.\n */\nfunction mapDispatchToProps(dispatch) {\n  return (0, _redux.bindActionCreators)({\n    _loadVideoData: _kalturaPlayerAPI.loadMediaData\n  }, dispatch // TS definition of `bindActionCreators()` seems to have no templated `Dispatch`\n  );\n}\n\n/**\n * @param Base The base class.\n * @returns A mix-in that implements video embedding API calls.\n */\nvar C4DVideoPlayerContainerMixin = exports.C4DVideoPlayerContainerMixin = function C4DVideoPlayerContainerMixin(Base) {\n  /**\n   * A mix-in class that sets up and cleans up event listeners defined by `@HostListener` decorator.\n   */\n  var C4DVideoPlayerContainerMixinImpl = /*#__PURE__*/function (_StableSelectorMixin) {\n    function C4DVideoPlayerContainerMixinImpl() {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, C4DVideoPlayerContainerMixinImpl);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, C4DVideoPlayerContainerMixinImpl, [].concat(args));\n      /**\n       * The video player.\n       */\n      /**\n       * The embedded Kaltura player element (that has `.sendNotification()`, etc. APIs), keyed by the video ID.\n       */\n      /**\n       * The request for the embedded Kaltura player element (that has `.sendNotification()`, etc. APIs), keyed by the video ID.\n       *\n       * @protected\n       */\n      // Not using TypeScript `private` due to: microsoft/TypeScript#17744\n      (0, _defineProperty2[\"default\"])(_this, \"_requestsEmbedVideo\", {});\n      /**\n       * Sends the API call for embedding video for the given video ID, and tracks the progress and the error of the REST call.\n       *\n       * @param videoId The video ID.\n       * @internal\n       */\n      (0, _defineProperty2[\"default\"])(_this, \"_embedMedia\", /*#__PURE__*/function () {\n        var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(videoId) {\n          var backgroundMode,\n            _this2,\n            requestsEmbedVideo,\n            requestEmbedVideo,\n            promiseEmbedVideo,\n            _args = arguments;\n          return _regenerator[\"default\"].wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                backgroundMode = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;\n                _this2 = _this, requestsEmbedVideo = _this2._requestsEmbedVideo;\n                requestEmbedVideo = requestsEmbedVideo[videoId];\n                if (!requestEmbedVideo) {\n                  _context.next = 5;\n                  break;\n                }\n                return _context.abrupt(\"return\", requestEmbedVideo);\n              case 5:\n                promiseEmbedVideo = _this._embedVideoImpl(videoId, backgroundMode);\n                _this._setRequestEmbedVideoInProgress(videoId, promiseEmbedVideo);\n                _context.prev = 7;\n                _context.t0 = _this;\n                _context.t1 = videoId;\n                _context.next = 12;\n                return promiseEmbedVideo;\n              case 12:\n                _context.t2 = _context.sent;\n                _context.t0._setEmbeddedVideo.call(_context.t0, _context.t1, _context.t2);\n                _context.next = 19;\n                break;\n              case 16:\n                _context.prev = 16;\n                _context.t3 = _context[\"catch\"](7);\n                _this._setErrorRequestEmbedVideo(videoId, _context.t3);\n              case 19:\n                return _context.abrupt(\"return\", promiseEmbedVideo);\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, null, [[7, 16]]);\n        }));\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n      (0, _defineProperty2[\"default\"])(_this, \"prefersAutoplayStorageKey\", \"\".concat(c4dPrefix, \"-background-video-prefers-autoplay\"));\n      return _this;\n    }\n    (0, _inherits2[\"default\"])(C4DVideoPlayerContainerMixinImpl, _StableSelectorMixin);\n    return (0, _createClass2[\"default\"])(C4DVideoPlayerContainerMixinImpl, [{\n      key: \"_setRequestEmbedVideoInProgress\",\n      value:\n      /**\n       * Sets the state that the API call for embedding the video for the given video ID is in progress.\n       *\n       * @param videoId The video ID.\n       * @param request The promise of the API call for embedding the video of the given video ID that is in progress.\n       * @private\n       */\n      // Not using TypeScript `private` due to: microsoft/TypeScript#17744\n      function _setRequestEmbedVideoInProgress(videoId, request) {\n        var oldRequestsEmbedVideo = this._requestsEmbedVideo;\n        this._requestsEmbedVideo = _objectSpread(_objectSpread({}, oldRequestsEmbedVideo), {}, (0, _defineProperty2[\"default\"])({}, videoId, request));\n      }\n\n      /**\n       * Set the state that the API call for embedding the video for the given video ID is failed.\n       *\n       * @param videoId The video ID.\n       * @param error An error from the API call for embedding the video of the given video ID.\n       * @private\n       */\n      // Not using TypeScript `private` due to: microsoft/TypeScript#17744\n    }, {\n      key: \"_setErrorRequestEmbedVideo\",\n      value: function _setErrorRequestEmbedVideo(videoId, error) {\n        this._setRequestEmbedVideoInProgress(videoId, Promise.reject(error));\n      }\n\n      /**\n       * Sets the given embedded Kaltura player element (that has `.sendNotification()`, etc. APIs) for the given video ID.\n       *\n       * @param videoId The video ID.\n       * @param kWidget The embedded Kaltura player element (that has `.sendNotification()`, etc. APIs).\n       * @private\n       */\n      // Not using TypeScript `private` due to: microsoft/TypeScript#17744\n    }, {\n      key: \"_setEmbeddedVideo\",\n      value: function _setEmbeddedVideo(videoId, kWidget) {\n        this._setRequestEmbedVideoInProgress(videoId, Promise.resolve(kWidget));\n        var oldEmbeddedVideos = this.embeddedVideos;\n        this.embeddedVideos = _objectSpread(_objectSpread({}, oldEmbeddedVideos), {}, (0, _defineProperty2[\"default\"])({}, videoId, kWidget));\n      }\n    }, {\n      key: \"_setAutoplayPreference\",\n      value: function _setAutoplayPreference(preference) {\n        var updatedValue = preference ? '1' : '0';\n        localStorage.setItem(\"\".concat(this.prefersAutoplayStorageKey), updatedValue);\n      }\n    }, {\n      key: \"_getAutoplayPreference\",\n      value: function _getAutoplayPreference() {\n        var storedValue = localStorage.getItem(\"\".concat(this.prefersAutoplayStorageKey));\n        var returnValue = storedValue === null ? null : Boolean(parseInt(storedValue, 10));\n        return returnValue;\n      }\n    }, {\n      key: \"_getPlayerOptions\",\n      value: function _getPlayerOptions() {\n        var backgroundMode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        var playerOptions = {};\n        if (backgroundMode) {\n          var storedMotionPreference = this._getAutoplayPreference();\n          var autoplayPreference;\n          if (storedMotionPreference === null) {\n            autoplayPreference = !window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n          } else {\n            autoplayPreference = storedMotionPreference;\n          }\n          playerOptions = {\n            'topBarContainer.plugin': false,\n            'controlBarContainer.plugin': false,\n            'largePlayBtn.plugin': false,\n            'loadingSpinner.plugin': false,\n            'unMuteOverlayButton.plugin': false,\n            'EmbedPlayer.DisableVideoTagSupport': false,\n            loop: true,\n            autoMute: true,\n            autoPlay: autoplayPreference,\n            // Turn off CTA's including mid-roll card and end cards.\n            'ibm.callToActions': false,\n            // Turn off captions display, background/ambient videos have no\n            // audio.\n            closedCaptions: {\n              plugin: false\n            }\n          };\n        }\n        return playerOptions;\n      }\n\n      /**\n       * Sets up and sends the API call for embedding video for the given video ID.\n       *\n       * @param videoId The video ID.\n       * @private\n       */\n      // Not using TypeScript `private` due to: microsoft/TypeScript#17744\n    }, {\n      key: \"_embedVideoImpl\",\n      value: (function () {\n        var _embedVideoImpl2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(videoId) {\n          var _getElementById;\n          var backgroundMode,\n            doc,\n            playerId,\n            div,\n            videoPlayer,\n            embedVideoHandle,\n            _yield$KalturaPlayerA,\n            width,\n            height,\n            videoEmbed,\n            _args2 = arguments;\n          return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                backgroundMode = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : false;\n                doc = Object.prototype.hasOwnProperty.call(this, 'getRootNode') ? this.getRootNode() : this.ownerDocument; // Given Kaltura replaces the `<div>` here with `<iframe>` with the video player,\n                // rendering this `<div>` in `renderLightDOM()` will cause the video player being clobbered\n                playerId = Math.random().toString(36).slice(2);\n                div = document.createElement('div');\n                div.id = playerId;\n                div.className = \"\".concat(c4dPrefix, \"--video-player__video\");\n                videoPlayer = this._videoPlayer;\n                if (videoPlayer) {\n                  _context2.next = 9;\n                  break;\n                }\n                throw new TypeError('Cannot find the video player component to put the video content into.');\n              case 9:\n                videoPlayer.appendChild(div);\n                _context2.next = 12;\n                return _KalturaPlayer[\"default\"].embedMedia(videoId, playerId, this._getPlayerOptions(backgroundMode));\n              case 12:\n                embedVideoHandle = _context2.sent;\n                _context2.next = 15;\n                return _KalturaPlayer[\"default\"].api(videoId);\n              case 15:\n                _yield$KalturaPlayerA = _context2.sent;\n                width = _yield$KalturaPlayerA.width;\n                height = _yield$KalturaPlayerA.height;\n                videoPlayer.style.setProperty('--native-file-width', \"\".concat(width, \"px\"));\n                videoPlayer.style.setProperty('--native-file-height', \"\".concat(height, \"px\"));\n                videoPlayer.style.setProperty('--native-file-aspect-ratio', \"\".concat(width, \" / \").concat(height));\n                doc.getElementById(playerId).dataset.videoId = videoId;\n                videoEmbed = (_getElementById = doc.getElementById(playerId)) === null || _getElementById === void 0 ? void 0 : _getElementById.firstElementChild;\n                if (videoEmbed) {\n                  videoEmbed.focus();\n                }\n                return _context2.abrupt(\"return\", embedVideoHandle.kWidget());\n              case 25:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this);\n        }));\n        function _embedVideoImpl(_x2) {\n          return _embedVideoImpl2.apply(this, arguments);\n        }\n        return _embedVideoImpl;\n      }())\n    }, {\n      key: \"firstUpdated\",\n      value:\n      /**\n       * Calls the data-* attribute transpose function to target `c4d-video-player`'s button element.\n       */\n      function firstUpdated() {\n        var _this3 = this;\n        window.requestAnimationFrame(function () {\n          var _this3$querySelector;\n          var button = (_this3$querySelector = _this3.querySelector('c4d-video-player')) === null || _this3$querySelector === void 0 || (_this3$querySelector = _this3$querySelector.shadowRoot) === null || _this3$querySelector === void 0 ? void 0 : _this3$querySelector.querySelector('button');\n          if (!_this3.getAttribute('href') && _this3.getAttribute('video-id')) {\n            _this3.setAttribute('href', \"https://mediacenter.ibm.com/id/\".concat(_this3.getAttribute('video-id')));\n          }\n          _this3.transposeAttributes(button, ['href']);\n        });\n      }\n    }]);\n  }((0, _stableSelector[\"default\"])(Base));\n  return C4DVideoPlayerContainerMixinImpl;\n};\n\n/**\n * Container component for video player.\n *\n * @element c4d-video-player-container\n */\nvar C4DVideoPlayerContainer = (0, _decorate2[\"default\"])([(0, _carbonElement.carbonElement)(\"\".concat(c4dPrefix, \"-video-player-container\"))], function (_initialize, _ConnectMixin) {\n  var C4DVideoPlayerContainer = /*#__PURE__*/function (_ConnectMixin2) {\n    function C4DVideoPlayerContainer() {\n      var _this4;\n      (0, _classCallCheck2[\"default\"])(this, C4DVideoPlayerContainer);\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      _this4 = _callSuper(this, C4DVideoPlayerContainer, [].concat(args));\n      _initialize(_this4);\n      return _this4;\n    }\n    (0, _inherits2[\"default\"])(C4DVideoPlayerContainer, _ConnectMixin2);\n    return (0, _createClass2[\"default\"])(C4DVideoPlayerContainer);\n  }(_ConnectMixin);\n  return {\n    F: C4DVideoPlayerContainer,\n    d: []\n  };\n}, (0, _connect[\"default\"])(_store[\"default\"], mapStateToProps, mapDispatchToProps)(C4DVideoPlayerContainerMixin(_videoPlayerComposite[\"default\"])));\n/* @__GENERATE_REACT_CUSTOM_ELEMENT_TYPE__ */\nvar _default = exports[\"default\"] = C4DVideoPlayerContainer;\n//# sourceMappingURL=video-player-container.js.map\n\n\n//# sourceURL=webpack://ibmdotcom-web-components-test/./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player-container.js?");

/***/ }),

/***/ "./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player.css.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player.css.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/**\n * @license\n *\n * Copyright IBM Corp. 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lit__WEBPACK_IMPORTED_MODULE_0__.css)([\n  '.c4d--video-player,:host(c4d-video-player){color:var(--c4d--video-caption--color,var(--cds-text-secondary,#525252))}.c4d--video-player .c4d--image__img,:host(c4d-video-player) .c4d--image__img{block-size:100%;inline-size:100%}.c4d--video-player:focus,:host(c4d-video-player:focus){outline:none}.c4d--video-player:focus .c4d--video-player__video-container:before,:host(c4d-video-player:focus) .c4d--video-player__video-container:before{border:1px solid var(--cds-focus-inverse,#fff);content:\" \";inset:.125rem;outline:.125rem solid var(--cds-focus,#0f62fe);position:absolute;z-index:1}.c4d--video-player c4d-image,:host(c4d-video-player) c4d-image{padding-block-start:0}.c4d--video-player[background-mode=true] .c4d--video-player__video-container,:host(c4d-video-player[background-mode=true]) .c4d--video-player__video-container{block-size:100%;padding:0}.c4d--video-player[background-mode=true] .c4d--video-player__video,.c4d--video-player[background-mode=true] ::slotted(.c4d--video-player__video),:host(c4d-video-player[background-mode=true]) .c4d--video-player__video,:host(c4d-video-player[background-mode=true]) ::slotted(.c4d--video-player__video){aspect-ratio:var(--native-file-aspect-ratio,16/9);inset:50% 0 0 50%;min-block-size:100%;min-inline-size:100%;translate:-50% -50%}.c4d--video-player .c4d--video-player__image-overlay:focus:before{border:1px solid var(--cds-focus-inverse,#fff);content:\" \";inset:.125rem;outline:.125rem solid var(--cds-focus,#0f62fe);position:absolute;z-index:1}.c4d--video-player .c4d--image,:host(c4d-video-player) c4d-image{block-size:100%;inline-size:100%;position:relative}.c4d--video-player .c4d--image:before,:host(c4d-video-player) c4d-image:before{background-color:var(--cds-border-inverse,#161616);block-size:100%;content:\"\";inline-size:100%;inset-block-start:0;inset-inline-start:0;opacity:0;position:absolute;transition:opacity .15s cubic-bezier(.2,0,.38,.9);z-index:1}@media screen and (prefers-reduced-motion:reduce){.c4d--video-player .c4d--image:before,:host(c4d-video-player) c4d-image:before{transition:none}}.c4d--video-player .c4d--image:hover:before,:host(c4d-video-player) c4d-image:hover:before{opacity:.08}.c4d--video-player__video-container{block-size:0;display:inline-block;inline-size:100%;overflow:hidden;padding-block-start:56.25%;position:relative}.c4d--video-player__video-container:focus{outline:none}.c4d--video-player__video-container .c4d--video-player__video,.c4d--video-player__video-container ::slotted(.c4d--video-player__video){inset:0;position:absolute}.c4d--video-player__video-container.c4d--video-player__aspect-ratio--16x9{block-size:0;overflow:hidden;padding-block-start:56.25%;position:relative}.c4d--video-player__video-container.c4d--video-player__aspect-ratio--9x16{block-size:0;overflow:hidden;padding-block-start:177.7777777778%;position:relative}.c4d--video-player__video-container.c4d--video-player__aspect-ratio--2x1{block-size:0;overflow:hidden;padding-block-start:50%;position:relative}.c4d--video-player__video-container.c4d--video-player__aspect-ratio--1x2{block-size:0;overflow:hidden;padding-block-start:200%;position:relative}.c4d--video-player__video-container.c4d--video-player__aspect-ratio--4x3{block-size:0;overflow:hidden;padding-block-start:75%;position:relative}.c4d--video-player__video-container.c4d--video-player__aspect-ratio--3x4{block-size:0;overflow:hidden;padding-block-start:133.3333333333%;position:relative}.c4d--video-player__video-container.c4d--video-player__aspect-ratio--1x1{block-size:0;overflow:hidden;padding-block-start:100%;position:relative}.c4d--video-player__video-caption{font-size:var(--cds-caption-02-font-size,.875rem);font-weight:var(--cds-caption-02-font-weight,400);letter-spacing:var(--cds-caption-02-letter-spacing,.32px);line-height:var(--cds-caption-02-line-height,1.28572);max-inline-size:90%;padding-block-start:var(--c4d--video-caption--padding,.5rem)}.c4d--video-player__image-overlay{block-size:100%;border:none;cursor:pointer;inline-size:100%;padding:0}.c4d--video-player__image-overlay:focus{outline:3px solid var(--cds-focus,#0f62fe);outline-offset:1px}.c4d--video-player__image-overlay:active svg circle,.c4d--video-player__image-overlay:hover svg circle{fill:#161616;opacity:.9}.c4d--video-player__image-overlay:active svg path,.c4d--video-player__image-overlay:hover svg path{fill:var(--cds-icon-on-color,#fff)}.c4d--video-player__image-overlay svg{inset-block-start:calc(50% - 2rem);inset-inline-end:calc(50% - 2rem);position:absolute}.c4d--video-player__image-overlay svg circle,.c4d--video-player__image-overlay svg path{transition:fill .15s cubic-bezier(.2,0,.38,.9),opacity .15s cubic-bezier(.2,0,.38,.9)}@media screen and (prefers-reduced-motion:reduce){.c4d--video-player__image-overlay svg circle,.c4d--video-player__image-overlay svg path{transition:none}}.c4d--video-player__image-overlay svg circle{opacity:.8}.c4d--video-player .c4d--video-player__image-overlay:active .c4d--image:before,.c4d--video-player .c4d--video-player__image-overlay:active c4d-image:before,:host(c4d-video-player) .c4d--video-player__image-overlay:active .c4d--image:before,:host(c4d-video-player) .c4d--video-player__image-overlay:active c4d-image:before{opacity:.12}',\n]));\n\n\n//# sourceURL=webpack://ibmdotcom-web-components-test/./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player.css.js?");

/***/ }),

/***/ "./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"VIDEO_PLAYER_CONTENT_STATE\", ({\n  enumerable: true,\n  get: function get() {\n    return _defs.VIDEO_PLAYER_CONTENT_STATE;\n  }\n}));\nObject.defineProperty(exports, \"VIDEO_PLAYER_PLAYING_MODE\", ({\n  enumerable: true,\n  get: function get() {\n    return _defs.VIDEO_PLAYER_PLAYING_MODE;\n  }\n}));\nexports[\"default\"] = void 0;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/taggedTemplateLiteral */ \"./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\"));\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\"));\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\"));\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\"));\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\"));\nvar _decorate2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/esm/decorate */ \"./node_modules/@babel/runtime/helpers/esm/decorate.js\"));\nvar _lit = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\nvar _decorators = __webpack_require__(/*! lit/decorators.js */ \"./node_modules/lit/decorators.js\");\nvar _classMap2 = __webpack_require__(/*! lit/directives/class-map.js */ \"./node_modules/lit/directives/class-map.js\");\nvar _ifDefined = __webpack_require__(/*! lit/directives/if-defined.js */ \"./node_modules/lit/directives/if-defined.js\");\nvar _focus = _interopRequireDefault(__webpack_require__(/*! ../../internal/vendor/@carbon/web-components/globals/mixins/focus.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/web-components/globals/mixins/focus.js\"));\nvar _playVideo = _interopRequireDefault(__webpack_require__(/*! ../../../es/icons/play-video.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/icons/play-video.js\"));\nvar _formatVideoCaption = __webpack_require__(/*! ../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/formatVideoCaption/formatVideoCaption.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/ibmdotcom-utilities/utilities/formatVideoCaption/formatVideoCaption.js\");\nvar _settings = _interopRequireDefault(__webpack_require__(/*! ../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js\"));\nvar _KalturaPlayer = _interopRequireDefault(__webpack_require__(/*! ../../internal/vendor/@carbon/ibmdotcom-services/services/KalturaPlayer/KalturaPlayer.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/ibmdotcom-services/services/KalturaPlayer/KalturaPlayer.js\"));\nvar _defs = __webpack_require__(/*! ./defs.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/defs.js\");\n__webpack_require__(/*! ../image/image.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/components/image/image.js\");\nvar _videoPlayerCss = _interopRequireDefault(__webpack_require__(/*! ././video-player.css.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player.css.js\"));\nvar _stableSelector = _interopRequireDefault(__webpack_require__(/*! ../../globals/mixins/stable-selector.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/globals/mixins/stable-selector.js\"));\nvar _parentVisibility = _interopRequireDefault(__webpack_require__(/*! ../../component-mixins/parent-visibility/parent-visibility.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/component-mixins/parent-visibility/parent-visibility.js\"));\nvar _carbonElement = __webpack_require__(/*! ../../internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js */ \"./node_modules/@carbon/ibmdotcom-web-components/es/internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js\");\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2[\"default\"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2[\"default\"])(o), (0, _possibleConstructorReturn2[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } /**\n * @license\n *\n * Copyright IBM Corp. 2020, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar c4dPrefix = _settings[\"default\"].stablePrefix;\n\n/**\n * Video player.\n *\n * @element c4d-video-player\n */\nvar C4DVideoPlayer = (0, _decorate2[\"default\"])([(0, _carbonElement.carbonElement)(\"\".concat(c4dPrefix, \"-video-player\"))], function (_initialize, _FocusMixin) {\n  var C4DVideoPlayer = /*#__PURE__*/function (_FocusMixin2) {\n    function C4DVideoPlayer() {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, C4DVideoPlayer);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, C4DVideoPlayer, [].concat(args));\n      _initialize(_this);\n      return _this;\n    }\n    (0, _inherits2[\"default\"])(C4DVideoPlayer, _FocusMixin2);\n    return (0, _createClass2[\"default\"])(C4DVideoPlayer);\n  }(_FocusMixin);\n  return {\n    F: C4DVideoPlayer,\n    d: [{\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        reflect: true,\n        attribute: 'playing-mode'\n      })],\n      key: \"playingMode\",\n      value: function value() {\n        return _defs.VIDEO_PLAYER_PLAYING_MODE.INLINE;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_handleClickOverlay\",\n      value:\n      /**\n       * The video player's mode showing Inline or Lightbox.\n       */\n\n      /**\n       * Handles `click` event on the video thumbnail.\n       */\n      function _handleClickOverlay() {\n        if (this.playingMode === _defs.VIDEO_PLAYER_PLAYING_MODE.INLINE) {\n          this.contentState = _defs.VIDEO_PLAYER_CONTENT_STATE.VIDEO;\n        }\n        var videoId = this.videoId,\n          name = this.name,\n          customVideoDescription = this.customVideoDescription;\n        var _ref = this.constructor,\n          eventContentStateChange = _ref.eventContentStateChange;\n        this.dispatchEvent(new CustomEvent(eventContentStateChange, {\n          bubbles: true,\n          composed: true,\n          detail: {\n            videoId: videoId,\n            contentState: _defs.VIDEO_PLAYER_CONTENT_STATE.VIDEO,\n            playingMode: this.playingMode,\n            name: name,\n            customVideoDescription: customVideoDescription\n          }\n        }));\n      }\n\n      /**\n       * @returns The video content.\n       */\n    }, {\n      kind: \"method\",\n      key: \"_renderContent\",\n      value: function _renderContent() {\n        var contentState = this.contentState,\n          name = this.name,\n          thumbnailUrl = this.thumbnailUrl,\n          backgroundMode = this.backgroundMode;\n        return contentState === _defs.VIDEO_PLAYER_CONTENT_STATE.THUMBNAIL && !backgroundMode ? (0, _lit.html)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n          <div class=\\\"\", \"--video-player__video\\\">\\n            <button\\n              class=\\\"\", \"--video-player__image-overlay\\\"\\n              @click=\\\"\", \"\\\">\\n              <c4d-image default-src=\\\"\", \"\\\" alt=\\\"\", \"\\\">\\n                \", \"\\n              </c4d-image>\\n            </button>\\n          </div>\\n        \"])), c4dPrefix, c4dPrefix, this._handleClickOverlay, thumbnailUrl, (0, _ifDefined.ifDefined)(name), (0, _playVideo[\"default\"])()) : (0, _lit.html)(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\" <slot></slot> \"])));\n      }\n\n      /**\n       * Updates video thumbnail url to match video width\n       */\n    }, {\n      kind: \"method\",\n      key: \"_updateThumbnailUrl\",\n      value: function _updateThumbnailUrl() {\n        var thumbnailSrc = false;\n        try {\n          thumbnailSrc = new URL(this.thumbnailUrl);\n        } catch (error) {\n          // Do nothing.\n        }\n\n        // If current thumbnail is from Kaltura and includes this video's ID we should be able to safely update it.\n        if (thumbnailSrc && thumbnailSrc.host.toLowerCase().includes('kaltura') && thumbnailSrc.pathname.includes(this.videoId)) {\n          this.thumbnailUrl = _KalturaPlayer[\"default\"].getThumbnailUrl({\n            mediaId: this.videoId,\n            width: String(this.offsetWidth)\n          });\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_onParentVisible\",\n      value: function _onParentVisible() {\n        this._updateThumbnailUrl();\n      }\n\n      /**\n       * userInitiatedTogglePlaybackState\n       */\n    }, {\n      kind: \"method\",\n      key: \"userInitiatedTogglePlaybackState\",\n      value: function userInitiatedTogglePlaybackState() {\n        var videoId = this.videoId;\n        var _ref2 = this.constructor,\n          eventPlaybackStateChange = _ref2.eventPlaybackStateChange;\n        this.dispatchEvent(new CustomEvent(eventPlaybackStateChange, {\n          bubbles: true,\n          composed: true,\n          detail: {\n            videoId: videoId,\n            playingMode: this.playingMode\n          }\n        }));\n      }\n\n      /**\n       * The video player's content state.\n       */\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        reflect: true,\n        attribute: 'content-state'\n      })],\n      key: \"contentState\",\n      value: function value() {\n        return _defs.VIDEO_PLAYER_CONTENT_STATE.THUMBNAIL;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        type: Number\n      })],\n      key: \"duration\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        attribute: false\n      })],\n      key: \"formatCaption\",\n      value: function value() {\n        return _formatVideoCaption.formatVideoCaption;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        attribute: false\n      })],\n      key: \"formatDuration\",\n      value: function value() {\n        return _formatVideoCaption.formatVideoDuration;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        type: Boolean,\n        attribute: 'hide-caption'\n      })],\n      key: \"hideCaption\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)()],\n      key: \"name\",\n      value: function value() {\n        return '';\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        attribute: 'background-mode',\n        reflect: true\n      })],\n      key: \"backgroundMode\",\n      value: function value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        attribute: 'video-description'\n      })],\n      key: \"customVideoDescription\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        attribute: 'thumbnail-url'\n      })],\n      key: \"thumbnailUrl\",\n      value: function value() {\n        return '';\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        attribute: 'video-id'\n      })],\n      key: \"videoId\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0, _decorators.property)({\n        attribute: 'aspect-ratio'\n      })],\n      key: \"aspectRatio\",\n      value: void 0\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value:\n      /**\n       * The video duration.\n       */\n      /**\n       * The formatter for the video caption, composed with the video name and the video duration.\n       * Should be changed upon the locale the UI is rendered with.\n       */\n      /**\n       * The formatter for the video duration.\n       * Should be changed upon the locale the UI is rendered with.\n       */\n      /**\n       * `true` to hide the caption.\n       */\n      /**\n       * The video name.\n       */\n      /**\n       * `true` to autoplay, mute video, and hide UI\n       */\n      /**\n       * Custom video description. This property should only be set when using `playing-mode=\"lightbox\"`\n       */\n      /**\n       * The thumbnail URL.\n       */\n      /**\n       * The video ID.\n       */\n      /**\n       * Override default aspect ratio of `16x9`.\n       * Available aspect ratios:\n       *\n       * `16x9`, `9x16`, `2x1`, `1x2`, `4x3`, `3x4`, `1x1`\n       */\n      function render() {\n        var aspectRatio = this.aspectRatio,\n          duration = this.duration,\n          formatCaption = this.formatCaption,\n          formatDuration = this.formatDuration,\n          hideCaption = this.hideCaption,\n          name = this.name;\n        var aspectRatioClass = (0, _classMap2.classMap)((0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])({}, \"\".concat(c4dPrefix, \"--video-player__video-container\"), true), \"\".concat(c4dPrefix, \"--video-player__aspect-ratio--\").concat(aspectRatio), !!aspectRatio));\n        return (0, _lit.html)(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n      <div class=\\\"\", \"\\\">\", \"</div>\\n      \", \"\\n    \"])), aspectRatioClass, this._renderContent(), hideCaption ? undefined : (0, _lit.html)(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n            <div class=\\\"\", \"--video-player__video-caption\\\">\\n              \", \"\\n            </div>\\n          \"])), c4dPrefix, formatCaption({\n          duration: formatDuration({\n            duration: !duration ? duration : duration * 1000\n          }),\n          name: name\n        })));\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProperties) {\n        var _this2 = this;\n        if (changedProperties.has('duration') || changedProperties.has('formatCaption') || changedProperties.has('name') || changedProperties.has('backgroundMode')) {\n          var duration = this.duration,\n            formatCaption = this.formatCaption,\n            formatDuration = this.formatDuration,\n            name = this.name;\n          var caption = formatCaption({\n            duration: formatDuration({\n              duration: !duration ? duration : duration * 1000\n            }),\n            name: name\n          });\n          if (caption) {\n            this.setAttribute('aria-label', caption);\n          }\n        }\n\n        // Move measurement & API call to callback queue & wait for update to complete.\n        setTimeout( /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n          return _regenerator[\"default\"].wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this2.updateComplete;\n              case 2:\n                if (!_this2.thumbnailUrl.endsWith(\"\".concat(_this2.offsetWidth))) {\n                  _this2._updateThumbnailUrl();\n                }\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        })), 0);\n      }\n    }, {\n      kind: \"method\",\n      key: \"firstUpdated\",\n      value: function firstUpdated() {\n        var _this$parentElement;\n        this.tabIndex = 0;\n        var parentIsBackground = Boolean((_this$parentElement = this.parentElement) === null || _this$parentElement === void 0 ? void 0 : _this$parentElement.backgroundMode);\n        this.backgroundMode = parentIsBackground;\n      }\n\n      /**\n       * The name of the custom event fired after video content state is changed upon a user gesture.\n       */\n    }, {\n      kind: \"get\",\n      \"static\": true,\n      key: \"eventContentStateChange\",\n      value: function eventContentStateChange() {\n        return \"\".concat(c4dPrefix, \"-video-player-content-state-changed\");\n      }\n\n      /**\n       * The name of the custom event fired requesting playback state change.\n       */\n    }, {\n      kind: \"get\",\n      \"static\": true,\n      key: \"eventPlaybackStateChange\",\n      value: function eventPlaybackStateChange() {\n        return \"\".concat(c4dPrefix, \"-video-player-playback-state-changed\");\n      }\n    }, {\n      kind: \"get\",\n      \"static\": true,\n      key: \"stableSelector\",\n      value: function stableSelector() {\n        return \"\".concat(c4dPrefix, \"--video-player\");\n      }\n    }, {\n      kind: \"field\",\n      \"static\": true,\n      key: \"shadowRootOptions\",\n      value: function value() {\n        return _objectSpread(_objectSpread({}, _lit.LitElement.shadowRootOptions), {}, {\n          delegatesFocus: true\n        });\n      }\n    }, {\n      kind: \"field\",\n      \"static\": true,\n      key: \"styles\",\n      value: function value() {\n        return _videoPlayerCss[\"default\"];\n      }\n    }]\n  };\n}, (0, _focus[\"default\"])((0, _stableSelector[\"default\"])((0, _parentVisibility[\"default\"])(_lit.LitElement))));\n/* @__GENERATE_REACT_CUSTOM_ELEMENT_TYPE__ */\nvar _default = exports[\"default\"] = C4DVideoPlayer;\n//# sourceMappingURL=video-player.js.map\n\n\n//# sourceURL=webpack://ibmdotcom-web-components-test/./node_modules/@carbon/ibmdotcom-web-components/es/components/video-player/video-player.js?");

/***/ })

}]);